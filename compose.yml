services:
  server-mysql:
    image: mysql:8
    container_name: server-mysql
    profiles:
      - servers
    ports:
      - "3326:3306"
    env_file:
      - ./mysql/config/.env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./mysql/data:/var/lib/mysql
    networks:
      - net-ms

  client-mysql:
    image: phpmyadmin:latest
    container_name: client-mysql
    profiles:
      - servers
    ports:
      - "9080:80"
    environment:
      - PMA_ARBITRARY=1
    networks:
      - net-ms

  server-rabbitmq:
    image: rabbitmq:management-alpine
    container_name: server-rabbitmq
    profiles:
      - servers
    ports:
      - "15672:15672" # Management UI
      - "5672:5672" # RabbitMQ
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - net-ms

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    container_name: zookeeper
    profiles:
      - servers
    hostname: zookeeper
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: nc -z localhost 2181 || exit 1
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - net-ms
  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    profiles:
      - servers
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9092 --list
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - net-ms

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    profiles:
      - servers
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - net-ms

  movie:
    image: movie
    build:
      context: ./apps/movie
      dockerfile: Dockerfile
    container_name: movie
    profiles:
      - apps
    ports:
      - "4500:3000"
    env_file:
      - ./config/database.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthcheck"]
      interval: 10s
      timeout: 20s
      retries: 2
    networks:
      - net-ms
    depends_on:
      server-mysql:
        condition: service_healthy

networks:
  net-ms:
    driver: bridge
    name: net-ms